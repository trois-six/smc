---
License:
  get:
    tags:
      - license
    summary: Retrieve current license information
    responses:
      "200":
        description: Success
        content:
          application/json:
            schema:
              type: object
              properties:
                version:
                  type: string
                  description: version number of licensing system in SMC
                comment:
                  type: string
                  description: comment on license from ERP
                clientOrganization:
                  type: string
                  description: customer company name
                clientContact:
                  type: string
                  description: customer contact name
                clientEmail:
                  type: string
                  description: customer contact email
                serial:
                  type: string
                  description: unique number generated by ERP to identify the license ("SMC" followed by 8 random hexa digits)
                firewallsMax:
                  type: string
                  description: maximum numbers of firewalls allowed
                dateUpdate:
                  type: string
                  description: validity date of maintenance contract (ISO 8601 format, "YYYY-MM-DD")
                dateNotBefore:
                  type: string
                  description: start validity date of license (ISO 8601 format, "YYYY-MM-DD")
                dateNotAfter:
                  type: string
                  description: end validity date of license (ISO 8601 format, "YYYY-MM-DD")
      "400":
        description: |
          `code` can be :
            - EFILEEMPTY : License file is empty
            - EGROUPMISSING : A group is missing in the license file
            - EITEMMISSING : An item is missing in the license file
            - EINVALIDITEMFORMAT : An item has an invalid format in the license file
            - EINVALIDLICENSE : License is invalid (decryption has failed)
      "401":
        description: Unauthorized access
  post:
    tags:
      - license
    summary: Install new license
    requestBody:
      required: true
      description: the license file to install
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              license:
                type: string
                format: binary
    responses:
      "200":
        description: Réussite
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                errors:
                  $ref: "../definitions/common.yaml#/ErrorsList"
      "401":
        description: Unauthorized access
      "400":
        description: |
          `code` can be :
            - EFILEEMPTY : License file is empty
            - EGROUPMISSING : A group is missing in the license file
            - EITEMMISSING : An item is missing in the license file
            - EINVALIDITEMFORMAT : An item has an invalid format in the license file
      "413":
        description: File is too big (max size is 1 Mb)

LicenseVerify:
  post:
    tags:
      - license
    summary: checks the license validity for maintenance date & expiration date
    responses:
      "200":
        description: Réussite
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
      "401":
        description: Unauthorized access
      "400":
        description: |
          `code` can be :
            - EFILEEMPTY : License file is empty
            - EGROUPMISSING : A group is missing in the license file
            - EITEMMISSING : An item is missing in the license file
            - EINVALIDITEMFORMAT : An item has an invalid format in the license file
            - EINVALIDLICENSE : License is invalid (decryption has failed)
            - EINVALIDLICENSE : The date of the license is invalid.

Interfaces:
  get:
    tags:
      - network
    summary: Retrieve system network interfaces information
    description: Return a list of configured values for each active network interface
    responses:
      "200":
        description: Success
        content:
          application/json:
            schema:
              $ref: "../definitions/config.yaml#/NetworkInterfacesListResponse"
      "401":
        description: Unauthorized access
  put:
    tags:
      - network
    summary: Updates the configuration files of a list of interfaces
    requestBody:
      required: true
      description: The new configuration of the interfaces
      content:
        application/json:
          schema:
            $ref: "../definitions/config.yaml#/NetworkInterfacesUpdateList"
    responses:
      "200":
        description: Success
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                result:
                  $ref: "../definitions/config.yaml#/NetworkInterfacesUpdateList"
      "400":
        description: |
          `code` can be :
            - EINVALIDPARAM : Given dhcp interface can't have ip address, mask or gateway parameters
            - EFAILEDBACKUP : Backup creation failed
      "401":
        description: Unauthorized access
      "500":
        description: Internal Server Error

Network:
  get:
    tags:
      - network
    summary: Retrieve system network configuration (dns, hostname and interfaces)
    description: Return an object with the dns, hostname and a list of configured values for each active network interface
    responses:
      "200":
        description: Success
        content:
          application/json:
            schema:
              $ref: "../definitions/config.yaml#/NetworkConfiguration"
      "401":
        description: Unauthorized access
  post:
    tags:
      - network
    summary: Updates the network configuration
    requestBody:
      required: true
      description: The new network configuration
      content:
        application/json:
          schema:
            $ref: "../definitions/config.yaml#/NetworkConfiguration"
    responses:
      "200":
        description: Success
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
      "400":
        description: |
          `code` can be :
            - EINVALIDPARAM : Given dhcp can't have ip address, mask or gateway parameters
      "401":
        description: Unauthorized access

Initial:
  get:
    tags:
      - config
    summary: Retrieve system network configuration (dns, hostname and interfaces)
    responses:
      "200":
        description: Success
        content:
          application/json:
            schema:
              $ref: "../definitions/config.yaml#/Initial"
      "403":
        description: Forbidden
  post:
    tags:
      - config
    summary: Initialize system configuration (network, admin and root password, etc.)
    requestBody:
      required: true
      description: The intial configuration
      content:
        application/json:
          schema:
            $ref: "../definitions/config.yaml#/InitialConfiguration"
    responses:
      "200":
        description: Success
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
      "400":
        description: |
          `code` can be :
            - EINVALIDPARAM : status parameter is missing
            - EINVALIDPASSWORD : admin or root password doesn't match password policy
      "403":
        description: Forbidden
      "500":
        description: Internal Server Error
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false

InitialCloud:
  post:
    tags:
      - config
    summary: Initialize system configuration in cloud like aws or outscale
    requestBody:
      required: true
      description: The intial configuration
      content:
        application/json:
          schema:
            $ref: "../definitions/config.yaml#/InitialCloudConfiguration"
    responses:
      "200":
        description: Success
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
      "400":
        description: |
          `code` can be :
            - EINVALIDPASSWORD : admin password doesn't match password policy
      "401":
        description: Unauthorized, if cloudInstanceId doesn't match actual InstanceId
      "403":
        description: Forbidden, if calling this route in non cloud env

Initialized:
  get:
    tags:
      - config
    summary: Fetch initialization state
    responses:
      "200":
        description: Success
        content:
          application/json:
            schema:
              $ref: "../definitions/config.yaml#/InitializedState"
      "500":
        description: Internal Server Error

DR:
  get:
    tags:
      - config
    summary: Retrieve DR mode value
    description: SMC DR activation value as a boolean
    responses:
      "200":
        description: Success
        content:
          application/json:
            schema:
              $ref: "../definitions/config.yaml#/DRActivation"
      "500":
        description: Internal Server Error
  post:
    tags:
      - config
    summary: Enable or disable DR mode
    description: Updates the DR mode value
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              dr:
                type: boolean
    responses:
      "200":
        description: Success
        content:
          application/json:
            schema:
              $ref: "../definitions/config.yaml#/DRActivation"
      "403":
        description: Forbidden
      "500":
        description: Internal Server Error
      "400":
        description: >
          `code` can be :
          - EINVAL : Request body is invalid

VpnCrlRequired:
  get:
    tags:
      - config
    summary: Retrieve VPN CRL REQUIRED value
    description: SMC VPN CRL REQUIRED value as a boolean
    responses:
      "200":
        description: Success
        content:
          application/json:
            schema:
              $ref: "../definitions/config.yaml#/VpnCrlRequired"
      "500":
        description: Internal Server Error
  put:
    tags:
      - config
    summary: Update VPN CRL REQUIRED
    description: Update VPN CRL REQUIRED value
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              vpnCrlRequired:
                type: boolean
    responses:
      "200":
        description: Success
        content:
          application/json:
            schema:
              $ref: "../definitions/config.yaml#/VpnCrlRequired"
      "400":
        description: >
          `code` can be :
          - EINVALIDBOOLEAN : Not a boolean
      "403":
        description: Forbidden
      "500":
        description: Internal Server Error

Sls:
  get:
    tags:
      - config
    summary: Retrieve SLS url value
    description: SMC SLS url value as a string
    responses:
      "200":
        description: Success
        content:
          application/json:
            schema:
              $ref: "../definitions/config.yaml#/Sls"
      "500":
        description: Internal Server Error
  put:
    tags:
      - config
    summary: Update SLS url
    description: Update SLS url value
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              slsUrl:
                type: string
    responses:
      "200":
        description: Success
        content:
          application/json:
            schema:
              $ref: "../definitions/config.yaml#/Sls"
      "400":
        description: >
          EINVALIDPARAM : IP address or FQDN invalid value
      "403":
        description: Forbidden
      "500":
        description: Internal Server Error

PAPI:
  get:
    tags:
      - config
    summary: Retrieve PAPI activation value
    description: SMC Public API feature activation value as a boolean
    responses:
      "200":
        description: Success
        content:
          application/json:
            schema:
              $ref: "../definitions/config.yaml#/PAPIActivation"
      "500":
        description: Internal Server Error
  put:
    tags:
      - config
    summary: Enable or disable PAPI feature
    description: Enable or disable the SMC Public API feature
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              isPapiActive:
                type: boolean
    responses:
      "200":
        description: Success
        content:
          application/json:
            schema:
              $ref: "../definitions/config.yaml#/PAPIActivation"
      "401":
        description: Unauthorized
      "500":
        description: Internal Server Error
      "400":
        description: >
          `code` can be :
          - EINVAL : isPapiActive must be a boolean
