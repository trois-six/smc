// Package smc provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package smc

import (
	"context"
	"net/http"
	"net/url"
	"strings"
	"time"

	openapi_types "github.com/oapi-codegen/runtime/types"
)

// Defines values for DefinitionsCertificationAuthoritiesCertificationAuthorityWithChildrenEnrollmentProtocol.
const (
	DefinitionsCertificationAuthoritiesCertificationAuthorityWithChildrenEnrollmentProtocolEST  DefinitionsCertificationAuthoritiesCertificationAuthorityWithChildrenEnrollmentProtocol = "EST"
	DefinitionsCertificationAuthoritiesCertificationAuthorityWithChildrenEnrollmentProtocolSCEP DefinitionsCertificationAuthoritiesCertificationAuthorityWithChildrenEnrollmentProtocol = "SCEP"
)

// Defines values for DefinitionsCertificationAuthoritiesCertificationAuthorityWithChildrenEnrollmentScepMethod.
const (
	DefinitionsCertificationAuthoritiesCertificationAuthorityWithChildrenEnrollmentScepMethodGet  DefinitionsCertificationAuthoritiesCertificationAuthorityWithChildrenEnrollmentScepMethod = "get"
	DefinitionsCertificationAuthoritiesCertificationAuthorityWithChildrenEnrollmentScepMethodPost DefinitionsCertificationAuthoritiesCertificationAuthorityWithChildrenEnrollmentScepMethod = "post"
)

// Defines values for DefinitionsCertificationAuthoritiesCertificationAuthorityWithChildrenMtype.
const (
	Authority   DefinitionsCertificationAuthoritiesCertificationAuthorityWithChildrenMtype = "authority"
	Certificate DefinitionsCertificationAuthoritiesCertificationAuthorityWithChildrenMtype = "certificate"
)

// Defines values for DefinitionsCertificationAuthoritiesCertificationAuthorityWithoutUuidEnrollmentProtocol.
const (
	DefinitionsCertificationAuthoritiesCertificationAuthorityWithoutUuidEnrollmentProtocolEST  DefinitionsCertificationAuthoritiesCertificationAuthorityWithoutUuidEnrollmentProtocol = "EST"
	DefinitionsCertificationAuthoritiesCertificationAuthorityWithoutUuidEnrollmentProtocolSCEP DefinitionsCertificationAuthoritiesCertificationAuthorityWithoutUuidEnrollmentProtocol = "SCEP"
)

// Defines values for DefinitionsCertificationAuthoritiesCertificationAuthorityWithoutUuidEnrollmentScepMethod.
const (
	DefinitionsCertificationAuthoritiesCertificationAuthorityWithoutUuidEnrollmentScepMethodGet  DefinitionsCertificationAuthoritiesCertificationAuthorityWithoutUuidEnrollmentScepMethod = "get"
	DefinitionsCertificationAuthoritiesCertificationAuthorityWithoutUuidEnrollmentScepMethodPost DefinitionsCertificationAuthoritiesCertificationAuthorityWithoutUuidEnrollmentScepMethod = "post"
)

// Defines values for DefinitionsCertificationAuthoritiesCertificationAuthorityWriteablePropsEnrollmentProtocol.
const (
	EST  DefinitionsCertificationAuthoritiesCertificationAuthorityWriteablePropsEnrollmentProtocol = "EST"
	SCEP DefinitionsCertificationAuthoritiesCertificationAuthorityWriteablePropsEnrollmentProtocol = "SCEP"
)

// Defines values for DefinitionsCertificationAuthoritiesCertificationAuthorityWriteablePropsEnrollmentScepMethod.
const (
	Get  DefinitionsCertificationAuthoritiesCertificationAuthorityWriteablePropsEnrollmentScepMethod = "get"
	Post DefinitionsCertificationAuthoritiesCertificationAuthorityWriteablePropsEnrollmentScepMethod = "post"
)

// Defines values for DefinitionsRulesParentType.
const (
	Firewall        DefinitionsRulesParentType = "firewall"
	FolderPrimary   DefinitionsRulesParentType = "folder-primary"
	FolderSecondary DefinitionsRulesParentType = "folder-secondary"
	RuleSet         DefinitionsRulesParentType = "rule-set"
)

// Defines values for DefinitionsProxyParametersProxyAppName.
const (
	Webadmin  DefinitionsProxyParametersProxyAppName = "webadmin"
	Webreport DefinitionsProxyParametersProxyAppName = "webreport"
)

// DefinitionsCertificationAuthoritiesAuthoriesImportedCrl CRL for authority
type DefinitionsCertificationAuthoritiesAuthoriesImportedCrl struct {
	LastUpdate *time.Time `json:"lastUpdate,omitempty"`
	NextUpdate *time.Time `json:"nextUpdate,omitempty"`

	// RevokedCertificate list of revoked certificates
	RevokedCertificate *[]struct {
		Reason         *float32   `json:"reason,omitempty"`
		RevocationDate *time.Time `json:"revocationDate,omitempty"`
		SerialNumber   *string    `json:"serialNumber,omitempty"`
	} `json:"revokedCertificate,omitempty"`
}

// DefinitionsCertificationAuthoritiesCertificationAuthorityWithChildren defines model for definitions_certification-authorities_CertificationAuthorityWithChildren.
type DefinitionsCertificationAuthoritiesCertificationAuthorityWithChildren struct {
	Children *[]DefinitionsCertificationAuthoritiesCertificationAuthorityWithChildren `json:"children,omitempty"`

	// Comment The description of the CA
	Comment *string `json:"comment,omitempty"`

	// CrlDistributionPoints The list of CRL distribution points for this CA
	CrlDistributionPoints *[]string `json:"crlDistributionPoints,omitempty"`

	// EndDate The end date of the CA's certificate
	EndDate    *openapi_types.Date `json:"endDate,omitempty"`
	Enrollment *struct {
		// EstAlias Additional path segment if protocol is EST and server provides service for multiple CAs
		EstAlias *string `json:"estAlias,omitempty"`

		// Protocol The enrollment protocol (SCEP if server URL protocol is HTTP, EST if HTTPS)
		Protocol   *DefinitionsCertificationAuthoritiesCertificationAuthorityWithChildrenEnrollmentProtocol   `json:"protocol,omitempty"`
		ScepMethod *DefinitionsCertificationAuthoritiesCertificationAuthorityWithChildrenEnrollmentScepMethod `json:"scepMethod,omitempty"`

		// ServerCaname The enrollment server CA name on SNS if protocol is EST; usually a DN if no short name has been defined
		ServerCaname *string `json:"serverCaname,omitempty"`

		// ServerUrl The URL of the enrollment server for this authority
		ServerUrl string `json:"serverUrl"`
	} `json:"enrollment,omitempty"`

	// Hash The hash of the CA's certificate
	Hash *string `json:"hash,omitempty"`

	// ImportedCrl CRL for authority
	ImportedCrl *DefinitionsCertificationAuthoritiesAuthoriesImportedCrl `json:"importedCrl,omitempty"`

	// Issuer The issuer of the CA's certificate
	Issuer *string `json:"issuer,omitempty"`

	// Mtype Type of the certificate ("certificate" or "authority")
	Mtype *DefinitionsCertificationAuthoritiesCertificationAuthorityWithChildrenMtype `json:"mtype,omitempty"`

	// Name The name of the CA
	Name *string `json:"name,omitempty"`

	// StartDate The start date of the CA's certificate
	StartDate *openapi_types.Date `json:"startDate,omitempty"`

	// Status Authority current status
	Status *string `json:"status,omitempty"`

	// Subject The subject of the CA's certificate
	Subject *string `json:"subject,omitempty"`

	// Uuid Object uuid
	Uuid string `json:"uuid"`
}

// DefinitionsCertificationAuthoritiesCertificationAuthorityWithChildrenEnrollmentProtocol The enrollment protocol (SCEP if server URL protocol is HTTP, EST if HTTPS)
type DefinitionsCertificationAuthoritiesCertificationAuthorityWithChildrenEnrollmentProtocol string

// DefinitionsCertificationAuthoritiesCertificationAuthorityWithChildrenEnrollmentScepMethod defines model for DefinitionsCertificationAuthoritiesCertificationAuthorityWithChildren.Enrollment.ScepMethod.
type DefinitionsCertificationAuthoritiesCertificationAuthorityWithChildrenEnrollmentScepMethod string

// DefinitionsCertificationAuthoritiesCertificationAuthorityWithChildrenMtype Type of the certificate ("certificate" or "authority")
type DefinitionsCertificationAuthoritiesCertificationAuthorityWithChildrenMtype string

// DefinitionsCertificationAuthoritiesCertificationAuthorityWithoutUuid defines model for definitions_certification-authorities_CertificationAuthorityWithoutUuid.
type DefinitionsCertificationAuthoritiesCertificationAuthorityWithoutUuid struct {
	// Comment The description of the CA
	Comment *string `json:"comment,omitempty"`

	// CrlDistributionPoints The list of CRL distribution points for this CA
	CrlDistributionPoints *[]string `json:"crlDistributionPoints,omitempty"`

	// EndDate The end date of the CA's certificate
	EndDate    *openapi_types.Date `json:"endDate,omitempty"`
	Enrollment *struct {
		// EstAlias Additional path segment if protocol is EST and server provides service for multiple CAs
		EstAlias *string `json:"estAlias,omitempty"`

		// Protocol The enrollment protocol (SCEP if server URL protocol is HTTP, EST if HTTPS)
		Protocol   *DefinitionsCertificationAuthoritiesCertificationAuthorityWithoutUuidEnrollmentProtocol   `json:"protocol,omitempty"`
		ScepMethod *DefinitionsCertificationAuthoritiesCertificationAuthorityWithoutUuidEnrollmentScepMethod `json:"scepMethod,omitempty"`

		// ServerCaname The enrollment server CA name on SNS if protocol is EST; usually a DN if no short name has been defined
		ServerCaname *string `json:"serverCaname,omitempty"`

		// ServerUrl The URL of the enrollment server for this authority
		ServerUrl string `json:"serverUrl"`
	} `json:"enrollment,omitempty"`

	// Hash The hash of the CA's certificate
	Hash *string `json:"hash,omitempty"`

	// ImportedCrl CRL for authority
	ImportedCrl *DefinitionsCertificationAuthoritiesAuthoriesImportedCrl `json:"importedCrl,omitempty"`

	// Issuer The issuer of the CA's certificate
	Issuer *string `json:"issuer,omitempty"`

	// Name The name of the CA
	Name *string `json:"name,omitempty"`

	// StartDate The start date of the CA's certificate
	StartDate *openapi_types.Date `json:"startDate,omitempty"`

	// Status Authority current status
	Status *string `json:"status,omitempty"`

	// Subject The subject of the CA's certificate
	Subject *string `json:"subject,omitempty"`
}

// DefinitionsCertificationAuthoritiesCertificationAuthorityWithoutUuidEnrollmentProtocol The enrollment protocol (SCEP if server URL protocol is HTTP, EST if HTTPS)
type DefinitionsCertificationAuthoritiesCertificationAuthorityWithoutUuidEnrollmentProtocol string

// DefinitionsCertificationAuthoritiesCertificationAuthorityWithoutUuidEnrollmentScepMethod defines model for DefinitionsCertificationAuthoritiesCertificationAuthorityWithoutUuid.Enrollment.ScepMethod.
type DefinitionsCertificationAuthoritiesCertificationAuthorityWithoutUuidEnrollmentScepMethod string

// DefinitionsCertificationAuthoritiesCertificationAuthorityWriteableProps defines model for definitions_certification-authorities_CertificationAuthorityWriteableProps.
type DefinitionsCertificationAuthoritiesCertificationAuthorityWriteableProps struct {
	// Comment The description of the CA
	Comment *string `json:"comment,omitempty"`

	// CrlDistributionPoints The list of CRL distribution points for this CA
	CrlDistributionPoints *[]string `json:"crlDistributionPoints,omitempty"`
	Enrollment            *struct {
		// EstAlias Additional path segment if protocol is EST and server provides service for multiple CAs
		EstAlias *string `json:"estAlias,omitempty"`

		// Protocol The enrollment protocol (SCEP if server URL protocol is HTTP, EST if HTTPS)
		Protocol   *DefinitionsCertificationAuthoritiesCertificationAuthorityWriteablePropsEnrollmentProtocol   `json:"protocol,omitempty"`
		ScepMethod *DefinitionsCertificationAuthoritiesCertificationAuthorityWriteablePropsEnrollmentScepMethod `json:"scepMethod,omitempty"`

		// ServerCaname The enrollment server CA name on SNS if protocol is EST; usually a DN if no short name has been defined
		ServerCaname *string `json:"serverCaname,omitempty"`

		// ServerUrl The URL of the enrollment server for this authority
		ServerUrl string `json:"serverUrl"`
	} `json:"enrollment,omitempty"`

	// Name The name of the CA
	Name *string `json:"name,omitempty"`
}

// DefinitionsCertificationAuthoritiesCertificationAuthorityWriteablePropsEnrollmentProtocol The enrollment protocol (SCEP if server URL protocol is HTTP, EST if HTTPS)
type DefinitionsCertificationAuthoritiesCertificationAuthorityWriteablePropsEnrollmentProtocol string

// DefinitionsCertificationAuthoritiesCertificationAuthorityWriteablePropsEnrollmentScepMethod defines model for DefinitionsCertificationAuthoritiesCertificationAuthorityWriteableProps.Enrollment.ScepMethod.
type DefinitionsCertificationAuthoritiesCertificationAuthorityWriteablePropsEnrollmentScepMethod string

// DefinitionsCommonUuid An uuid
type DefinitionsCommonUuid = string

// DefinitionsFoldersFolderMember defines model for definitions_folders_FolderMember.
type DefinitionsFoldersFolderMember struct {
	// Children Sub-folders list (mandatory, but can be empty)
	Children []DefinitionsFoldersFolderMember `json:"children"`

	// Comment Folder's description
	Comment *string `json:"comment,omitempty"`

	// Firewalls List of firewall UUIDs contained by this folder
	Firewalls *[]string `json:"firewalls,omitempty"`

	// Name Folder\'s name
	Name string `json:"name"`
	Uuid string `json:"uuid"`
}

// DefinitionsObjectsObjectUuid defines model for definitions_objects_ObjectUuid.
type DefinitionsObjectsObjectUuid struct {
	// Uuid Object uuid
	Uuid string `json:"uuid"`
}

// DefinitionsRulesParentType defines model for definitions_rules_ParentType.
type DefinitionsRulesParentType string

// DefinitionsProxyParametersProxyAppName defines model for definitions_proxy_parameters_ProxyAppName.
type DefinitionsProxyParametersProxyAppName string

// DefinitionsProxyParametersProxyFileNameField defines model for definitions_proxy_parameters_ProxyFileNameField.
type DefinitionsProxyParametersProxyFileNameField = string

// DefinitionsProxyParametersProxyFirewallUuid defines model for definitions_proxy_parameters_ProxyFirewallUuid.
type DefinitionsProxyParametersProxyFirewallUuid = string

// DefinitionsProxyParametersProxyManifestConsent defines model for definitions_proxy_parameters_ProxyManifestConsent.
type DefinitionsProxyParametersProxyManifestConsent = bool

// DefinitionsProxyParametersProxyManifestRefuse defines model for definitions_proxy_parameters_ProxyManifestRefuse.
type DefinitionsProxyParametersProxyManifestRefuse = bool

// DefinitionsProxyParametersProxyUserId defines model for definitions_proxy_parameters_ProxyUserId.
type DefinitionsProxyParametersProxyUserId = string

// RequestEditorFn  is the function signature for the RequestEditor callback function
type RequestEditorFn func(ctx context.Context, req *http.Request) error

// Doer performs HTTP requests.
//
// The standard http.Client implements this interface.
type HttpRequestDoer interface {
	Do(req *http.Request) (*http.Response, error)
}

// Client which conforms to the OpenAPI3 specification for this service.
type Client struct {
	// The endpoint of the server conforming to this interface, with scheme,
	// https://api.deepmap.com for example. This can contain a path relative
	// to the server, such as https://api.deepmap.com/dev-test, and all the
	// paths in the swagger spec will be appended to the server.
	Server string

	// Doer for performing requests, typically a *http.Client with any
	// customized settings, such as certificate chains.
	Client HttpRequestDoer

	// A list of callbacks for modifying requests which are generated before sending over
	// the network.
	RequestEditors []RequestEditorFn
}

// ClientOption allows setting custom parameters during construction
type ClientOption func(*Client) error

// Creates a new Client, with reasonable defaults
func NewClient(server string, opts ...ClientOption) (*Client, error) {
	// create a client with sane default values
	client := Client{
		Server: server,
	}
	// mutate client and add all optional params
	for _, o := range opts {
		if err := o(&client); err != nil {
			return nil, err
		}
	}
	// ensure the server URL always has a trailing slash
	if !strings.HasSuffix(client.Server, "/") {
		client.Server += "/"
	}
	// create httpClient, if not already present
	if client.Client == nil {
		client.Client = &http.Client{}
	}
	return &client, nil
}

// WithHTTPClient allows overriding the default Doer, which is
// automatically created using http.Client. This is useful for tests.
func WithHTTPClient(doer HttpRequestDoer) ClientOption {
	return func(c *Client) error {
		c.Client = doer
		return nil
	}
}

// WithRequestEditorFn allows setting up a callback function, which will be
// called right before sending the request. This can be used to mutate the request.
func WithRequestEditorFn(fn RequestEditorFn) ClientOption {
	return func(c *Client) error {
		c.RequestEditors = append(c.RequestEditors, fn)
		return nil
	}
}

// The interface specification for the client above.
type ClientInterface interface {
}

func (c *Client) applyEditors(ctx context.Context, req *http.Request, additionalEditors []RequestEditorFn) error {
	for _, r := range c.RequestEditors {
		if err := r(ctx, req); err != nil {
			return err
		}
	}
	for _, r := range additionalEditors {
		if err := r(ctx, req); err != nil {
			return err
		}
	}
	return nil
}

// ClientWithResponses builds on ClientInterface to offer response payloads
type ClientWithResponses struct {
	ClientInterface
}

// NewClientWithResponses creates a new ClientWithResponses, which wraps
// Client with return type handling
func NewClientWithResponses(server string, opts ...ClientOption) (*ClientWithResponses, error) {
	client, err := NewClient(server, opts...)
	if err != nil {
		return nil, err
	}
	return &ClientWithResponses{client}, nil
}

// WithBaseURL overrides the baseURL.
func WithBaseURL(baseURL string) ClientOption {
	return func(c *Client) error {
		newBaseURL, err := url.Parse(baseURL)
		if err != nil {
			return err
		}
		c.Server = newBaseURL.String()
		return nil
	}
}

// ClientWithResponsesInterface is the interface specification for the client with responses above.
type ClientWithResponsesInterface interface {
}
